{"ast":null,"code":"var _jsxFileName = \"/Users/adityarajprasad/assignment/src/components/KanbanBoard/KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport Column from \"../Column/Column\";\nimport \"./KanbanBoard.css\";\nimport Display from \"../GroupingMenu/GroupingMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = ({\n  url\n}) => {\n  _s();\n  var _localStorage$getItem, _localStorage$getItem2;\n  const [grouping, setGrouping] = useState((_localStorage$getItem = localStorage.getItem(\"grouping\")) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"status\");\n  const [sorting, setSorting] = useState((_localStorage$getItem2 = localStorage.getItem(\"sorting\")) !== null && _localStorage$getItem2 !== void 0 ? _localStorage$getItem2 : \"priority\");\n  const [groupedTickets, setGroupedTickets] = useState({});\n  const [data, setData] = useState({\n    tickets: [],\n    users: []\n  });\n  const statuses = useMemo(() => [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"], []);\n  const priorities = useMemo(() => [\"Urgent\", \"High\", \"Medium\", \"Low\", \"No priority\"], []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [url]);\n  const getUserName = userId => {\n    const user = data.users.find(user => user.id === userId);\n    return user ? user.name : \"Unknown User\";\n  };\n  useEffect(() => {\n    localStorage.setItem(\"grouping\", grouping);\n    localStorage.setItem(\"sorting\", sorting);\n    const groupTickets = () => {\n      const grouped = {};\n      if (grouping === \"status\") {\n        statuses.forEach(status => {\n          grouped[status] = [];\n        });\n      } else if (grouping === \"priority\") {\n        priorities.forEach((priority, index) => {\n          grouped[priority] = [];\n        });\n      }\n      data.tickets.forEach(ticket => {\n        let key;\n        if (grouping === \"status\") key = ticket.status;else if (grouping === \"user\") key = data.users.find(user => user.id === ticket.userId).name;else if (grouping === \"priority\") key = priorities[ticket.priority];\n        if (!grouped[key]) grouped[key] = [];\n        grouped[key].push(ticket);\n      });\n\n      // Sort tickets within each group\n      Object.keys(grouped).forEach(key => {\n        grouped[key].sort((a, b) => {\n          if (sorting === \"priority\") return b.priority - a.priority;\n          return a.title.localeCompare(b.title);\n        });\n      });\n      setGroupedTickets(grouped);\n    };\n    if (data.tickets.length > 0) {\n      groupTickets();\n    }\n  }, [grouping, sorting, statuses, priorities, data]);\n  const renderColumns = () => {\n    if (grouping === \"status\") {\n      return statuses.map(status => /*#__PURE__*/_jsxDEV(Column, {\n        title: status,\n        tickets: groupedTickets[status] || [],\n        getUserName: getUserName\n      }, status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this));\n    } else if (grouping === \"priority\") {\n      return priorities.map(priority => /*#__PURE__*/_jsxDEV(Column, {\n        title: priority,\n        tickets: groupedTickets[priority] || [],\n        getUserName: getUserName\n      }, priority, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this));\n    } else {\n      return Object.entries(groupedTickets).map(([key, tickets]) => /*#__PURE__*/_jsxDEV(Column, {\n        title: key,\n        tickets: tickets,\n        getUserName: getUserName\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this));\n    }\n  };\n  const handleGroupingChange = newGrouping => {\n    setGrouping(newGrouping);\n  };\n  const handleSortingChange = newSorting => {\n    setSorting(newSorting);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      grouping: grouping,\n      sorting: sorting,\n      onGroupingChange: handleGroupingChange,\n      onSortingChange: handleSortingChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-columns\",\n      children: renderColumns()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"5w1PmJL3Vw3bdcjqlksIwfv8QzI=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Column","Display","jsxDEV","_jsxDEV","KanbanBoard","url","_s","_localStorage$getItem","_localStorage$getItem2","grouping","setGrouping","localStorage","getItem","sorting","setSorting","groupedTickets","setGroupedTickets","data","setData","tickets","users","statuses","priorities","fetchData","response","fetch","jsonData","json","error","console","getUserName","userId","user","find","id","name","setItem","groupTickets","grouped","forEach","status","priority","index","ticket","key","push","Object","keys","sort","a","b","title","localeCompare","length","renderColumns","map","fileName","_jsxFileName","lineNumber","columnNumber","entries","handleGroupingChange","newGrouping","handleSortingChange","newSorting","className","children","onGroupingChange","onSortingChange","_c","$RefreshReg$"],"sources":["/Users/adityarajprasad/assignment/src/components/KanbanBoard/KanbanBoard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport Column from \"../Column/Column\";\nimport \"./KanbanBoard.css\";\nimport Display from \"../GroupingMenu/GroupingMenu\";\n\nconst KanbanBoard = ({ url }) => {\n  const [grouping, setGrouping] = useState(\n    localStorage.getItem(\"grouping\") ?? \"status\"\n  );\n  const [sorting, setSorting] = useState(\n    localStorage.getItem(\"sorting\") ?? \"priority\"\n  );\n  const [groupedTickets, setGroupedTickets] = useState({});\n  const [data, setData] = useState({ tickets: [], users: [] });\n\n  const statuses = useMemo(\n    () => [\"Backlog\", \"Todo\", \"In progress\", \"Done\", \"Canceled\"],\n    []\n  );\n  const priorities = useMemo(\n    () => [\"Urgent\", \"High\", \"Medium\", \"Low\", \"No priority\"],\n    []\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  const getUserName = (userId) => {\n    const user = data.users.find((user) => user.id === userId);\n    return user ? user.name : \"Unknown User\";\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"grouping\", grouping);\n    localStorage.setItem(\"sorting\", sorting);\n\n    const groupTickets = () => {\n      const grouped = {};\n\n      if (grouping === \"status\") {\n        statuses.forEach((status) => {\n          grouped[status] = [];\n        });\n      } else if (grouping === \"priority\") {\n        priorities.forEach((priority, index) => {\n          grouped[priority] = [];\n        });\n      }\n\n      data.tickets.forEach((ticket) => {\n        let key;\n        if (grouping === \"status\") key = ticket.status;\n        else if (grouping === \"user\")\n          key = data.users.find((user) => user.id === ticket.userId).name;\n        else if (grouping === \"priority\") key = priorities[ticket.priority];\n\n        if (!grouped[key]) grouped[key] = [];\n        grouped[key].push(ticket);\n      });\n\n      // Sort tickets within each group\n      Object.keys(grouped).forEach((key) => {\n        grouped[key].sort((a, b) => {\n          if (sorting === \"priority\") return b.priority - a.priority;\n          return a.title.localeCompare(b.title);\n        });\n      });\n\n      setGroupedTickets(grouped);\n    };\n\n    if (data.tickets.length > 0) {\n      groupTickets();\n    }\n  }, [grouping, sorting, statuses, priorities, data]);\n\n  const renderColumns = () => {\n    if (grouping === \"status\") {\n      return statuses.map((status) => (\n        <Column\n          key={status}\n          title={status}\n          tickets={groupedTickets[status] || []}\n          getUserName={getUserName}\n        />\n      ));\n    } else if (grouping === \"priority\") {\n      return priorities.map((priority) => (\n        <Column\n          key={priority}\n          title={priority}\n          tickets={groupedTickets[priority] || []}\n          getUserName={getUserName}\n        />\n      ));\n    } else {\n      return Object.entries(groupedTickets).map(([key, tickets]) => (\n        <Column\n          key={key}\n          title={key}\n          tickets={tickets}\n          getUserName={getUserName}\n        />\n      ));\n    }\n  };\n\n  const handleGroupingChange = (newGrouping) => {\n    setGrouping(newGrouping);\n  };\n\n  const handleSortingChange = (newSorting) => {\n    setSorting(newSorting);\n  };\n\n  return (\n    <div className=\"kanban-board\">\n      <Display\n        grouping={grouping}\n        sorting={sorting}\n        onGroupingChange={handleGroupingChange}\n        onSortingChange={handleSortingChange}\n      />\n      <div className=\"board-columns\">{renderColumns()}</div>\n    </div>\n  );\n};\n\nexport default KanbanBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}